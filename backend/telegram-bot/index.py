import json
import os
from typing import Dict, Any

BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN', '8238321643:AAEV7kBinohHb-RSLah7VSBJ2XSsXTQUpW4')

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    '''
    Business: Telegram –±–æ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    Args: event - dict —Å httpMethod, body; context - –æ–±—ä–µ–∫—Ç —Å request_id
    Returns: HTTP response dict
    '''
    method: str = event.get('httpMethod', 'POST')
    
    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'POST, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type',
                'Access-Control-Max-Age': '86400'
            },
            'body': '',
            'isBase64Encoded': False
        }
    
    if method == 'GET':
        return {
            'statusCode': 200,
            'headers': {'Content-Type': 'text/plain'},
            'body': 'Telegram Bot Webhook OK',
            'isBase64Encoded': False
        }
    
    if method != 'POST':
        return {
            'statusCode': 405,
            'headers': {'Content-Type': 'application/json'},
            'body': json.dumps({'error': 'Method not allowed'}),
            'isBase64Encoded': False
        }
    
    try:
        body_str = event.get('body', '{}')
        print(f"Received update: {body_str}")
        update = json.loads(body_str)
        
        if 'message' not in update:
            print("No message in update")
            return {
                'statusCode': 200,
                'headers': {'Content-Type': 'application/json'},
                'body': json.dumps({'ok': True}),
                'isBase64Encoded': False
            }
        
        message = update['message']
        chat_id = message['chat']['id']
        text = message.get('text', '')
        print(f"Chat ID: {chat_id}, Text: {text}")
        
        if text == '/start':
            response_text = (
                'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Ç–µ–∞—Ç—Ä–∞–ª—å–Ω–æ–π —Å—Ç—É–¥–∏–∏ –û–ª—å–≥–∏ –®—Ç–µ—Ä—Ü.\n\n'
                'üìö –£ –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ –∫—É—Ä—Å–∞:\n'
                'üé≠ –ê–∫—Ç–µ—Ä—Å–∫–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ\n'
                'üé§ –û—Ä–∞—Ç–æ—Ä—Å–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ\n\n'
                '–ù–∞–ø–∏—à–∏—Ç–µ /courses –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–∞—Ö\n'
                '–ù–∞–ø–∏—à–∏—Ç–µ /contact –¥–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏'
            )
        elif text == '/courses':
            response_text = (
                'üéì –ù–∞—à–∏ –∫—É—Ä—Å—ã:\n\n'
                'üé≠ <b>–ê–∫—Ç–µ—Ä—Å–∫–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ</b>\n'
                '–†–∞–∑–≤–∏—Ç–∏–µ –∞–∫—Ç–µ—Ä—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, —Ä–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º\n'
                '‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 10 –Ω–µ–¥–µ–ª—å\n\n'
                'üé§ <b>–û—Ä–∞—Ç–æ—Ä—Å–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ</b>\n'
                '–£–≤–µ—Ä–µ–Ω–Ω—ã–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è, –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ–ª–æ—Å–∞, —Ä–∞–±–æ—Ç–∞ —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π\n'
                '‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 8 –Ω–µ–¥–µ–ª—å\n\n'
                '–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /contact'
            )
        elif text == '/contact':
            response_text = (
                'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏:\n\n'
                'üìß Email: info@olga-sterts.ru\n'
                'üåê –°–∞–π—Ç: https://olga-sterts.ru\n\n'
                '–ò–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–¥–µ—Å—å, –∏ –º—ã –≤–∞–º –æ—Ç–≤–µ—Ç–∏–º!'
            )
        elif text.startswith('/'):
            response_text = (
                '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.\n\n'
                '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
                '/start - –ù–∞—á–∞—Ç—å\n'
                '/courses - –ö—É—Ä—Å—ã\n'
                '/contact - –ö–æ–Ω—Ç–∞–∫—Ç—ã'
            )
        else:
            response_text = (
                '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üôè\n\n'
                '–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.\n\n'
                '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /courses —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—à–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö.'
            )
        
        print(f"Sending message to {chat_id}")
        result = send_message(chat_id, response_text)
        print(f"Message sent: {result}")
        
        return {
            'statusCode': 200,
            'headers': {'Content-Type': 'application/json'},
            'body': json.dumps({'ok': True}),
            'isBase64Encoded': False
        }
        
    except Exception as e:
        print(f"Error: {str(e)}")
        import traceback
        traceback.print_exc()
        return {
            'statusCode': 200,
            'headers': {'Content-Type': 'application/json'},
            'body': json.dumps({'ok': True, 'error': str(e)}),
            'isBase64Encoded': False
        }

def send_message(chat_id: int, text: str):
    '''–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ Telegram Bot API'''
    import urllib.request
    
    url = f'https://api.telegram.org/bot{BOT_TOKEN}/sendMessage'
    
    data = json.dumps({
        'chat_id': chat_id,
        'text': text,
        'parse_mode': 'HTML'
    }).encode('utf-8')
    
    req = urllib.request.Request(
        url,
        data=data,
        headers={'Content-Type': 'application/json'}
    )
    
    with urllib.request.urlopen(req) as response:
        return json.loads(response.read().decode('utf-8'))